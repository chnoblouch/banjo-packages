name: Build Package

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'The package to build'
        required: true
        type: choice
        options:
          - glfw
          - vulkan

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install LLVM
        run: choco install llvm

      - name: Install Ninja
        run: choco install ninja

      - name: Install libclang
        run: pip install libclang

      - name: Download Banjo toolchain
        run: Invoke-WebRequest -OutFile banjo-x86_64-windows.zip https://github.com/chnoblouch/banjo-lang/releases/latest/download/banjo-x86_64-windows.zip

      - name: Extract Banjo toolchain
        run: Expand-Archive .\banjo-x86_64-windows.zip $ENV:USERPROFILE

      - name: Add Banjo toolchain to PATH
        run: echo "$ENV:USERPROFILE\banjo-x86_64-windows\bin" | Out-File -FilePath $ENV:GITHUB_PATH -Encoding utf8 -Append

      - name: Build package
        run: python build_${{ inputs.package }}.py
        working-directory: .\scripts

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.package }}-x86_64-windows-msvc"
          path: .\packages\${{ inputs.package }}

  build-linux:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Install Ninja
        run: sudo apt-get install -y ninja-build

      - name: Install build dependencies
        run: sudo apt-get install -y xorg-dev libwayland-dev libxkbcommon-dev wayland-protocols extra-cmake-modules

      - name: Install libclang
        run: pip3 install libclang

      - name: Download Banjo toolchain
        run: curl -OL https://github.com/chnoblouch/banjo-lang/releases/latest/download/banjo-x86_64-linux.zip

      - name: Extract Banjo toolchain
        run: unzip banjo-x86_64-linux.zip -d $HOME
      
      - name: Add Banjo toolchain to PATH
        run: echo "$HOME/banjo-x86_64-linux/bin" >> $GITHUB_PATH

      - name: Build package
        run: python build_${{ inputs.package }}.py
        working-directory: ./scripts

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.package }}-x86_64-linux-gnu"
          path: ./packages/${{ inputs.package }}

  build-macos:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.13

      - name: Install Ninja
        run: brew install ninja

      - name: Install libclang
        run: pip install libclang

      - name: Download Banjo toolchain
        run: curl -OL https://github.com/chnoblouch/banjo-lang/releases/latest/download/banjo-aarch64-macos.zip

      - name: Extract Banjo toolchain
        run: unzip banjo-aarch64-macos.zip -d $HOME
      
      - name: Add Banjo toolchain to PATH
        run: echo "$HOME/banjo-aarch64-macos/bin" >> $GITHUB_PATH

      - name: Build package
        run: python build_${{ inputs.package }}.py
        working-directory: ./scripts

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.package }}-aarch64-macos"
          path: ./packages/${{ inputs.package }}

  merge:
    runs-on: ubuntu-24.04

    needs:
      - build-windows
      - build-linux
      - build-macos

    steps:
      - uses: actions/checkout@v4

      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          path: ./packages
      
      - name: Merge packages
        run: python ./merge_target_variants.py ${{ inputs.package }}

      - name: Upload merged package
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.package }}"
          path: ./packages/${{ inputs.package }}
